import { NextResponse } from 'next/server';
import { getPurchaseRequests, approvePurchaseRequest } from './actions';
import { purchaseRequestSchema } from './schemas';

export async function GET(req: Request) {
  try {
    const { searchParams } = new URL(req.url);
    const status = searchParams.get('status') || 'pending';
    const page = parseInt(searchParams.get('page') || '1');
    const limit = parseInt(searchParams.get('limit') || '10');
    
    const { requests, total } = await getPurchaseRequests({ status, page, limit });
    return NextResponse.json({ success: true, data: requests, total });
  } catch (error) {
    return NextResponse.json(
      { success: false, error: error.message },
      { status: 500 }
    );
  }
}

export async function POST(req: Request) {
  try {
    const body = await req.json();
    const validated = purchaseRequestSchema.parse(body);
    
    const result = await approvePurchaseRequest(
      validated.requestId,
      validated.adminId
    );
    
    return NextResponse.json({ success: true, data: result });
  } catch (error) {
    return NextResponse.json(
      { success: false, error: error.message },
      { status: 400 }
    );
  }
}