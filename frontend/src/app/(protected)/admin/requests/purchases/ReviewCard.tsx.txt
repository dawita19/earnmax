'use client';

import { PurchaseRequest } from '@/lib/types';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardFooter, CardHeader } from '@/components/ui/card';
import { format } from 'date-fns';
import Image from 'next/image';
import { useRouter } from 'next/navigation';
import { approvePurchase, rejectPurchase } from '@/actions/purchases';
import { toast } from 'sonner';

interface ReviewCardProps {
  request: PurchaseRequest;
}

export function ReviewCard({ request }: ReviewCardProps) {
  const router = useRouter();

  const handleApprove = async () => {
    try {
      await approvePurchase(request.id);
      toast.success('Purchase approved');
      router.refresh();
    } catch (error) {
      toast.error('Failed to approve purchase');
    }
  };

  const handleReject = async () => {
    try {
      await rejectPurchase(request.id);
      toast.success('Purchase rejected');
      router.refresh();
    } catch (error) {
      toast.error('Failed to reject purchase');
    }
  };

  return (
    <Card>
      <CardHeader>
        <div className="flex justify-between">
          <h3 className="font-medium">
            {request.user.fullName} - VIP {request.vipLevel}
          </h3>
          <span className="text-sm text-muted-foreground">
            {format(new Date(request.createdAt), 'MMM dd, yyyy HH:mm')}
          </span>
        </div>
      </CardHeader>
      
      <CardContent className="space-y-4">
        <div className="grid grid-cols-2 gap-4">
          <div>
            <p className="text-sm text-muted-foreground">Amount</p>
            <p>{request.amount.toLocaleString()} ETB</p>
          </div>
          <div>
            <p className="text-sm text-muted-foreground">Payment Method</p>
            <p>{request.paymentMethod}</p>
          </div>
        </div>

        {request.paymentProofUrl && (
          <div>
            <p className="text-sm text-muted-foreground mb-2">Payment Proof</p>
            <div className="relative aspect-video overflow-hidden rounded-md">
              <Image
                src={request.paymentProofUrl}
                alt="Payment proof"
                fill
                className="object-cover"
              />
            </div>
          </div>
        )}
      </CardContent>
      
      <CardFooter className="flex justify-end gap-2">
        <Button variant="destructive" onClick={handleReject}>
          Reject
        </Button>
        <Button onClick={handleApprove}>Approve</Button>
      </CardFooter>
    </Card>
  );
}